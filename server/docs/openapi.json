{
  "openapi": "3.0.0",
  "info": {
    "title": "Payfluence API",
    "version": "v1.0.0",
    "description": "\nPayfluencer is a creator monetization platform that connects brands with content creators through performance-based bounties. This API enables both creators and companies to interact with the platform programmatically and manage workflows including bounty listing, content submission, review, and communication.\n\nCore Capabilities:\n- Creator authentication and profile management\n- Company bounty creation with detailed targeting criteria\n- Submission of creator content for review and reward tracking\n- Real-time chat between creators, clients, and platform admins\n- Status tracking for content submissions (Draft, Submitted, Accepted, Paid)\n\nAuthentication:\nAll endpoints require authentication using Supabase JWT tokens. Only Gmail-based authentication is currently supported.\n\nContent Guidelines:\nBounty listings may include content restrictions such as language, age rating, platform, and visibility requirements.\n\nFor support or questions, contact the Payfluencer team at support@payfluencer.xyz.\n",
    "license": {
      "name": "Copyright 2025 Payfluence"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8001"
    }
  ],
  "paths": {
    "/api/v1/company": {
      "post": {
        "summary": "Create a new company",
        "tags": [
          "Company"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Company name"
                  },
                  "logo": {
                    "type": "string",
                    "description": "Company logo URL"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Company created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Company created successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "company": {
                          "$ref": "#/components/schemas/Company"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "Get company details by ID",
        "tags": [
          "Company"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Company ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Company found successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Company found"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "company": {
                          "$ref": "#/components/schemas/Company"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update company details",
        "tags": [
          "Company"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Company ID"
                  },
                  "name": {
                    "type": "string",
                    "description": "Company name"
                  },
                  "description": {
                    "type": "string",
                    "description": "Company description"
                  },
                  "website": {
                    "type": "string",
                    "description": "Company website URL"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Company updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Company updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "company": {
                          "$ref": "#/components/schemas/Company"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a company",
        "tags": [
          "Company"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Company ID to delete"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Company deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Company deleted successfully"
                    },
                    "data": {
                      "type": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/company/all": {
      "get": {
        "summary": "Get all companies with pagination",
        "tags": [
          "Company"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Companies found successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Companies found"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "companies": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Company"
                          }
                        },
                        "totalCompanies": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/auth/google": {
      "post": {
        "summary": "Authenticate user with Google ID token",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "idToken"
                ],
                "properties": {
                  "idToken": {
                    "type": "string",
                    "description": "Google ID token from client"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User authenticated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "User logged in successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/GoogleAuthResponse"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/auth/google/callback": {
      "get": {
        "summary": "Handle Google OAuth callback",
        "tags": [
          "Authentication"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Authorization code from Google"
          }
        ],
        "responses": {
          "200": {
            "description": "User authenticated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "User logged in successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/GoogleAuthResponse"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/report": {
      "post": {
        "summary": "Create a new report",
        "tags": [
          "Report"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "user_id",
                  "company_id",
                  "title",
                  "description",
                  "platform"
                ],
                "properties": {
                  "user_id": {
                    "type": "string",
                    "description": "User ID"
                  },
                  "company_id": {
                    "type": "string",
                    "description": "Company ID"
                  },
                  "title": {
                    "type": "string",
                    "description": "Report title"
                  },
                  "description": {
                    "type": "string",
                    "description": "Report description"
                  },
                  "platform": {
                    "type": "string",
                    "description": "Platform name"
                  },
                  "status": {
                    "type": "string",
                    "description": "Report status"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Report created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Report created successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "report": {
                          "$ref": "#/components/schemas/Report"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "Get report by ID",
        "tags": [
          "Report"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Report ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Report found successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Report found"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "report": {
                          "$ref": "#/components/schemas/Report"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Report not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update a report (user can update their own, except status)",
        "tags": [
          "Report"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "user_id"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Report ID"
                  },
                  "user_id": {
                    "type": "string",
                    "description": "User ID"
                  },
                  "title": {
                    "type": "string",
                    "description": "Report title"
                  },
                  "description": {
                    "type": "string",
                    "description": "Report description"
                  },
                  "platform": {
                    "type": "string",
                    "description": "Platform name"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Report updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Report updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "report": {
                          "$ref": "#/components/schemas/Report"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a report (user can delete their own)",
        "tags": [
          "Report"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "user_id"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Report ID"
                  },
                  "user_id": {
                    "type": "string",
                    "description": "User ID"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Report deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Report deleted successfully"
                    },
                    "data": {
                      "type": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/report/status": {
      "put": {
        "summary": "Update report status (company only)",
        "tags": [
          "Report"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "status"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Report ID"
                  },
                  "company_id": {
                    "type": "string",
                    "description": "Company ID"
                  },
                  "status": {
                    "type": "string",
                    "description": "New status"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Report status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Report status updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "report": {
                          "$ref": "#/components/schemas/Report"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/settings": {
      "get": {
        "summary": "Get all site settings",
        "tags": [
          "Settings"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Settings retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Settings retrieved successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SiteSetting"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update a setting",
        "tags": [
          "Settings"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "key",
                  "value"
                ],
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "Setting key"
                  },
                  "value": {
                    "type": "string",
                    "description": "Setting value"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Setting updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Setting updated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/SiteSetting"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a new setting",
        "tags": [
          "Settings"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "key",
                  "value"
                ],
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "Setting key"
                  },
                  "value": {
                    "type": "string",
                    "description": "Setting value"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Setting created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Setting created successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/SiteSetting"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden - Admin access required"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a setting",
        "tags": [
          "Settings"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "key",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Setting key to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Setting deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Setting deleted successfully"
                    },
                    "data": {
                      "type": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/settings/setting": {
      "get": {
        "summary": "Get setting by key",
        "tags": [
          "Settings"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "key",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Setting key"
          }
        ],
        "responses": {
          "200": {
            "description": "Setting retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Setting retrieved successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "settings": {
                          "$ref": "#/components/schemas/SiteSetting"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Setting not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/user": {
      "put": {
        "summary": "Update user details",
        "tags": [
          "User"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The user ID"
                  },
                  "name": {
                    "type": "string",
                    "description": "User's full name"
                  },
                  "email": {
                    "type": "string",
                    "description": "User's email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "User updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "Get user details by ID",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User found successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "User found"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "tags": [
          "User"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "User ID to delete"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "User deleted successfully"
                    },
                    "data": {
                      "type": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/user/logout": {
      "get": {
        "summary": "Logout user",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "User logged out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "User logged out successfully"
                    },
                    "data": {
                      "type": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/all": {
      "get": {
        "summary": "Get all users with pagination",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Users found successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Users found"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "users": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        "totalUsers": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/user/search": {
      "get": {
        "summary": "Search for a user by email or ID",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "email",
                "id"
              ]
            },
            "description": "Search type"
          },
          {
            "in": "query",
            "name": "term",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Search term"
          }
        ],
        "responses": {
          "200": {
            "description": "User found successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "User found"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/user/refresh": {
      "get": {
        "summary": "Refresh user access token",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "Access refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Access refreshed successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Company": {
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The company ID"
          },
          "name": {
            "type": "string",
            "description": "Company name"
          },
          "logo": {
            "type": "string",
            "description": "Company logo URL"
          },
          "description": {
            "type": "string",
            "description": "Company description"
          },
          "website": {
            "type": "string",
            "description": "Company website URL"
          }
        }
      },
      "GoogleAuthResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User ID"
          },
          "email": {
            "type": "string",
            "description": "User's email"
          },
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "role": {
            "type": "string",
            "description": "User's role"
          },
          "phoneNumber": {
            "type": "string",
            "description": "User's phone number"
          },
          "createdAt": {
            "type": "string",
            "description": "Account creation date"
          },
          "isActive": {
            "type": "boolean",
            "description": "Account status"
          },
          "profilePicture": {
            "type": "string",
            "description": "URL to user's profile picture"
          },
          "isNewUser": {
            "type": "boolean",
            "description": "Whether this is a new user"
          }
        }
      },
      "Report": {
        "type": "object",
        "required": [
          "user_id",
          "company_id",
          "title",
          "description",
          "platform"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Report ID"
          },
          "user_id": {
            "type": "string",
            "description": "User ID who created the report"
          },
          "company_id": {
            "type": "string",
            "description": "Company ID the report is for"
          },
          "title": {
            "type": "string",
            "description": "Report title"
          },
          "description": {
            "type": "string",
            "description": "Report description"
          },
          "platform": {
            "type": "string",
            "description": "Platform name"
          },
          "status": {
            "type": "string",
            "description": "Report status (draft, submitted, approved, rejected)"
          },
          "createdAt": {
            "type": "string",
            "description": "Report creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "description": "Report last update timestamp"
          }
        }
      },
      "SiteSetting": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "Setting key"
          },
          "value": {
            "type": "string",
            "description": "Setting value"
          },
          "updatedBy": {
            "type": "string",
            "description": "ID of user who last updated the setting"
          },
          "createdAt": {
            "type": "string",
            "description": "Setting creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "description": "Setting last update timestamp"
          }
        }
      },
      "User": {
        "type": "object",
        "required": [
          "id",
          "email",
          "name",
          "role"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The user ID"
          },
          "email": {
            "type": "string",
            "description": "User's email"
          },
          "name": {
            "type": "string",
            "description": "User's full name"
          },
          "role": {
            "type": "string",
            "description": "User's role (ADMIN, USER, etc)"
          },
          "phoneNumber": {
            "type": "string",
            "description": "User's phone number"
          },
          "createdAt": {
            "type": "string",
            "description": "User creation date"
          },
          "isActive": {
            "type": "boolean",
            "description": "User's active status"
          }
        }
      }
    }
  },
  "tags": []
}
// filepath: /Users/ab/Documents/projects/freelance/payfluence/prisma/schema.prisma
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "generated/prisma/client"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Enums - Positioned before the models where they are used
enum UserRole {
  ADMIN           // Site administrator
  USER            // Normal user
}

// User model 
model User {
  id                String            @id @default(uuid())
  name              String?
  email             String?
  password          String?
  profile_picture   String?
  bio               String?
  evm_wallet_address String?          @unique
  created_at        DateTime          @default(now())
  update_at         DateTime          @updatedAt
  
  role              UserRole?         @default(USER)
  isActive          Boolean           @default(true)
  lastLogin         DateTime?         @default(now())
  phoneNumber       String?
  
  reports           Report[]
  chats             Chat[]
  passwordResets    PasswordReset[]
  siteSettings      SiteSetting[]
}

// Company model
model Company {
  id                String            @id @default(uuid())
  name              String?
  logo              String?
  created_at        DateTime          @default(now())
  update_at         DateTime          @updatedAt
  
  bounties          Bounty[]
  reports           Report[]
}

// Bounty model
model Bounty {
  id                String            @id @default(uuid())
  company_id        String
  max_payout        Float?
  nsfw              Boolean?
  cursing           Boolean?
  nudity            Boolean?
  language          String?
  age_restriction   Int?
  created_at        DateTime          @default(now())
  update_at         DateTime          @updatedAt
  
  company           Company           @relation(fields: [company_id], references: [id])
}

// Report model
model Report {
  id                String            @id @default(uuid())
  user_id           String
  company_id        String
  title             String?
  description       String?
  platform          String?
  status            String?
  created_at        DateTime          @default(now())
  updated_at        DateTime          @updatedAt
  
  user              User              @relation(fields: [user_id], references: [id])
  company           Company           @relation(fields: [company_id], references: [id])
  chats             Chat[]
}

// Chat model
model Chat {
  id                String            @id @default(uuid())
  report_id         String
  user_id           String
  message           String?
  created_at        DateTime          @default(now())

  report            Report            @relation(fields: [report_id], references: [id])
  user              User              @relation(fields: [user_id], references: [id])
}

// Password reset tokens
model PasswordReset {
  id                String            @id @default(uuid())
  token             String            @unique
  user_id           String
  user              User              @relation(fields: [user_id], references: [id])
  expires_at        DateTime
  created_at        DateTime          @default(now())
  used              Boolean           @default(false)
}

// Site settings managed by admins
model SiteSetting {
  id                String            @id @default(uuid())
  key               String            @unique
  value             String
  updated_at        DateTime          @updatedAt

  // Relationships
  updatedBy         User              @relation(fields: [updated_by_id], references: [id])
  updated_by_id     String
}
